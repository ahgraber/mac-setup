---
- name: "Check if conda installed"
  shell: |
    [[ -f $HOME/mambaforge/bin/conda ]]
  args:
    executable: /bin/bash
  register: conda_exists
  ignore_errors: yes

- name: "Install conda"
  shell: |
    curl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh
    bash Mambaforge-$(uname)-$(uname -m).sh -b -f -p $HOME/mambaforge
    rm Mambaforge-$(uname)-$(uname -m).sh
  args:
    executable: /bin/bash
  when: conda_exists.rc != 0

# - name: Copy default environment.yaml
#   copy:
#     src: ./files/conda/environment.yaml
#     dest: /Users/{{ lookup('env', 'USER') }}/environment.yaml
#     owner: "{{ lookup('env', 'USER') }}"
#     force: no

# - name: Copy supplemental requirements.txt
#   copy:
#     src: ./files/conda/requirements.txt
#     dest: /Users/{{ lookup('env', 'USER') }}/requirements.txt
#     owner: "{{ lookup('env', 'USER') }}"
#     force: no

# Deprecated: don't care, we'll call the binary directly
# And the .zshrc we're copying in will include the init
# - name: "Initialize conda"
#   shell: |
#     export conda="$HOME/mambaforge/bin/conda"
#     conda init zsh
#     conda init bash
#   args:
#     executable: /bin/zsh
#   when: conda_exists.rc != 0

# # Instead, let's just provide shortcuts to the binaries
# - name: "Initialize conda"
#   shell: |
#     cat > $HOME/.zshenv <<EOF
#     export conda="$HOME/mambaforge/bin/conda"
#     export mamba="$HOME/mambaforge/bin/mamba"
#     EOF
#   args:
#     executable: /bin/zsh

# get/test current working directory
- shell: pwd
  register: shell_pwd
  when: debug
- debug: var=shell_pwd.stdout
  when: debug

- name: "Check if default env exists"
  shell: |
    [[ -d $HOME/mambaforge/envs/default ]]
  args:
    executable: /bin/bash
  register: default_env_exists
  ignore_errors: yes

# - name: "Install Default Python"
#   shell: |
#     $HOME/mambaforge/bin/conda create --name default -yq
#     $HOME/mambaforge/bin/conda activate default
#     $HOME/mambaforge/bin/mamba env update -f ./files/conda/environment.yaml
#     pip install -r ./files/conda/requirement.txt
#     $HOME/mambaforge/bin/conda deactivate
#   args:
#     executable: /bin/zsh
#   when: default_env_exists.rc != 0

- name: "Install Default Python"
  shell: |
    conda() { "$HOME/mambaforge/bin/conda"; }
    mamba() { "$HOME/mambaforge/bin/mamba"; }

    conda create --name default -yq
    conda activate default
    mamba env update -f ./files/conda/environment.yaml
    pip install -r ./files/conda/requirement.txt
    conda deactivate
  args:
    executable: /bin/zsh
  when: default_env_exists.rc != 0
    # export conda="$HOME/mambaforge/bin/conda"
    # export mamba="$HOME/mambaforge/bin/mamba"
